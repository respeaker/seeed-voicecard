#!/bin/bash
#
# Copyright (c) 2018 Baozhu Zuo <zuobaozhu@gmail.com>
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

set -x
LOGF=/var/log/$(basename $0).log
exec 1> >(tee $LOGF)
exec 2>&1

export PATH=$PATH:/opt/vc/bin
OVERLAYS=/boot/overlays
[ -d /boot/firmware/overlays ] && OVERLAYS=/boot/firmware/overlays

#enable i2c interface
dtparam -d $OVERLAYS i2c_arm=on
modprobe i2c-dev

#enable spi interface
dtparam -d $OVERLAYS spi=on

_VER_RUN=
function get_kernel_version() {
    local ZIMAGE IMG_OFFSET

    _VER_RUN=""
    [ -z "$_VER_RUN" ] && {
        ZIMAGE=/boot/kernel.img
        IMG_OFFSET=$(LC_ALL=C grep -abo $'\x1f\x8b\x08\x00' $ZIMAGE | head -n 1 | cut -d ':' -f 1)
        _VER_RUN=$(dd if=$ZIMAGE obs=64K ibs=4 skip=$(( IMG_OFFSET / 4)) | zcat | grep -a -m1 "Linux version" | strings | awk '{ print $3; }')
    }
    echo "$_VER_RUN"
    return 0
}

CONFIG=/boot/config.txt
[ -f /boot/firmware/usercfg.txt ] && CONFIG=/boot/firmware/usercfg.txt

get_overlay() {
    ov=$1
    if grep -q -E "^dtoverlay=$ov" $CONFIG; then
      echo 0
    else
      echo 1
    fi
}

do_overlay() {
    ov=$1
    RET=$2
    DEFAULT=--defaultno
    CURRENT=0
    if [ $(get_overlay $ov) -eq 0 ]; then
        DEFAULT=
        CURRENT=1
    fi
    if [ $RET -eq $CURRENT ]; then
        ASK_TO_REBOOT=1
    fi
    if [ $RET -eq 0 ]; then
        sed $CONFIG -i -e "s/^#dtoverlay=$ov/dtoverlay=$ov/"
        if ! grep -q -E "^dtoverlay=$ov" $CONFIG; then
            printf "dtoverlay=$ov\n" >> $CONFIG
        fi
        STATUS=enabled
    elif [ $RET -eq 1 ]; then
        sed $CONFIG -i -e "s/^dtoverlay=$ov/#dtoverlay=$ov/"
        STATUS=disabled
    else
        return $RET
    fi
}


is_1a=$(i2cdetect -y  1 0x1a 0x1a | egrep "(1a|UU)" | awk '{print $2}')
is_35=$(i2cdetect -y  1 0x35 0x35 | egrep "(35|UU)" | awk '{print $2}')
is_3b=$(i2cdetect -y  1 0x3b 0x3b | egrep "(3b|UU)" | awk '{print $2}')

RPI_HATS="seeed-2mic-voicecard seeed-4mic-voicecard seeed-8mic-voicecard"
overlay=""
audioconfig=/home/pi/audiosetup

if [ "x${is_1a}" != "x" ] && [ "x${is_35}" == "x" ] ; then
    echo "install 2mic"
    if [ -f $audioconfig ] ; then
        sudo rm $audioconfig
    fi
    echo 'Respeaker-2-Mic' >> $audioconfig
    echo "create 2mic asound configure file"
    overlay=seeed-2mic-voicecard
    asound_conf=/etc/voicecard/asound_2mic.conf
    asound_rc=/etc/voicecard/asound_2mic.conf
    asound_state=/etc/voicecard/wm8960_asound.state
fi

if [ "x${is_3b}" != "x" ] && [ "x${is_35}" == "x" ] ; then
    if [ -f $audioconfig ] ; then
        sudo rm $audioconfig
    fi
    echo 'Respeaker-4-Mic' >> $audioconfig
    echo "create 4mic asound configure file"
    overlay=seeed-4mic-voicecard
    asound_conf=/etc/voicecard/asound_4mic.conf
    asound_rc=/etc/voicecard/asound_4mic.conf
    asound_state=/etc/voicecard/ac108_asound.state
    if aplay -l | grep -q "bcm2835 ALSA"; then
      amixer cset numid=3 1 || true
    fi
fi

if [ "x${is_3b}" != "x" ] && [ "x${is_35}" != "x" ] ; then
    echo "install 6mic"
    if [ -f $audioconfig ] ; then
        sudo rm $audioconfig
    fi
    echo 'Respeaker-6-Mic' >> $audioconfig
    echo "create 6mic asound configure file"
    overlay=seeed-8mic-voicecard
    asound_conf=/etc/voicecard/asound_6mic.conf
    asound_rc=/etc/voicecard/asound_6mic.conf
    asound_state=/etc/voicecard/ac108_6mic.state
fi

if [ "$overlay" ]; then
    echo Install $overlay ...

    # Remove old configuration
    rm /etc/asound.conf
    rm /home/pi/.asoundrc
    rm /var/lib/alsa/asound.state

: <<\EOF
    kernel_ver=$(get_kernel_version)
    # echo kernel_ver=$kernel_ver

    # TODO: dynamic dtoverlay Bug of v4.19.x
    #       no DT node phandle inserted.
    if [[ "$kernel_ver" =~ ^4\.19.*$ || "$kernel_ver" =~ ^5\.*$ ]]; then
        for i in $RPI_HATS; do
            if [ "$i" == "$overlay" ]; then
                do_overlay $overlay 0
            else
                echo Uninstall $i ...
                do_overlay $i 1
            fi
        done
    fi
EOF
    #make sure the driver loads correctly
    dtoverlay -d $OVERLAYS $overlay || true


    echo "create $overlay asound configure file"
    ln -s $asound_conf /etc/asound.conf
    echo "create $overlay asound status file"
    ln -s $asound_state /var/lib/alsa/asound.state
fi

alsactl restore

#Force 3.5mm ('headphone') jack
#   The Raspberry Pi 4, released on 24th Jun 2019, has two HDMI ports,
#   and can drive two displays with audios for two users simultaneously,
#   in a "multiseat" configuration. The earlier single virtual ALSA
#   option for re-directing audio playback between headphone jack and HDMI
#   via a 'Routing' mixer setting was turned off eventually to allow
#   simultaneous usage of all 3 playback devices.
if aplay -l | grep -q "bcm2835 ALSA"; then
    amixer cset numid=3 1 || true
fi

exit 0
